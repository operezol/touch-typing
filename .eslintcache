[{"C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\App.js":"1","C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\index.js":"2","C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\components\\keyCap\\style.js":"3","C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\components\\keyCap\\index.jsx":"4","C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\App.style.js":"5","C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\components\\keyboard\\index.style.js":"6","C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\components\\keyboard\\index.jsx":"7"},{"size":304,"mtime":1607543186648,"results":"8","hashOfConfig":"9"},{"size":146,"mtime":1606600362835,"results":"10","hashOfConfig":"9"},{"size":738,"mtime":1607539829425,"results":"11","hashOfConfig":"9"},{"size":375,"mtime":1606608094383,"results":"12","hashOfConfig":"9"},{"size":55,"mtime":1607542647127,"results":"13","hashOfConfig":"9"},{"size":360,"mtime":1607542609745,"results":"14","hashOfConfig":"9"},{"size":2589,"mtime":1607543149835,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1r6l2hk",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\App.js",["31"],"C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\index.js",[],"C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\components\\keyCap\\style.js",[],"C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\components\\keyCap\\index.jsx",[],"C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\App.style.js",["32"],"C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\components\\keyboard\\index.style.js",[],"C:\\Users\\Oriol\\source\\repos\\touch-typing\\src\\components\\keyboard\\index.jsx",["33"],"import React, { useState } from \"react\";\nimport KeyCap from \"../keyCap\";\nimport { SCKeyboard, SCKeyboardSide, SCKeyboardRow } from \"./index.style\";\nimport { SCkeyCap } from \"../keyCap/style\";\n\nconst KEYMAP = require(\"../../keymap.json\");\n\nconst Keyboard = () => {\n  return (\n    <SCKeyboard>\n      <SCKeyboardSide>\n        <SCKeyboardRow>\n          {KEYMAP.filter(\n            (keycap) => keycap.side === \"left\" && keycap.row === 0\n          ).map((keycap) => (\n            <KeyCap keycap={keycap} key={keycap.key} />\n          ))}\n        </SCKeyboardRow>\n        <SCKeyboardRow>\n          <SCkeyCap width={3} />\n          {KEYMAP.filter(\n            (keycap) => keycap.side === \"left\" && keycap.row === 1\n          ).map((keycap) => (\n            <KeyCap keycap={keycap} key={keycap.key} />\n          ))}\n        </SCKeyboardRow>\n        <SCKeyboardRow>\n          <SCkeyCap width={3.5} />\n          {KEYMAP.filter(\n            (keycap) => keycap.side === \"left\" && keycap.row === 2\n          ).map((keycap) => (\n            <KeyCap keycap={keycap} key={keycap.key} />\n          ))}\n        </SCKeyboardRow>\n        <SCKeyboardRow>\n          <SCkeyCap width={2.25} />\n          {KEYMAP.filter(\n            (keycap) => keycap.side === \"left\" && keycap.row === 3\n          ).map((keycap) => (\n            <KeyCap keycap={keycap} key={keycap.key} />\n          ))}\n        </SCKeyboardRow>\n      </SCKeyboardSide>\n      <SCKeyboardSide>\n        <SCKeyboardRow>\n          <SCkeyCap width={0.75} />\n          {KEYMAP.filter(\n            (keycap) => keycap.side === \"right\" && keycap.row === 0\n          ).map((keycap) => (\n            <KeyCap keycap={keycap} key={keycap.key} />\n          ))}\n        </SCKeyboardRow>\n        <SCKeyboardRow>\n          {KEYMAP.filter(\n            (keycap) => keycap.side === \"right\" && keycap.row === 1\n          ).map((keycap) => (\n            <KeyCap keycap={keycap} key={keycap.key} />\n          ))}\n        </SCKeyboardRow>\n        <SCKeyboardRow>\n          <SCkeyCap width={0.1} />\n          {KEYMAP.filter(\n            (keycap) => keycap.side === \"right\" && keycap.row === 2\n          ).map((keycap) => (\n            <KeyCap keycap={keycap} key={keycap.key} />\n          ))}\n        </SCKeyboardRow>\n        <SCKeyboardRow>\n          <SCkeyCap width={0.75} />\n          {KEYMAP.filter(\n            (keycap) => keycap.side === \"right\" && keycap.row === 3\n          ).map((keycap) => (\n            <KeyCap keycap={keycap} key={keycap.key} />\n          ))}\n        </SCKeyboardRow>\n      </SCKeyboardSide>\n    </SCKeyboard>\n  );\n};\n\nexport default Keyboard;\n",{"ruleId":"34","severity":1,"message":"35","line":4,"column":10,"nodeType":"36","messageId":"37","endLine":4,"endColumn":13},{"ruleId":"34","severity":1,"message":"38","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":14},{"ruleId":"34","severity":1,"message":"39","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":25},"no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","'styled' is defined but never used.","'useState' is defined but never used."]